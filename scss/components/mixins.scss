//MIXINS
@mixin center($horizontal: true, $vertical: true) {
  position: absolute;
  @if ($horizontal and $vertical) {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if ($horizontal) {
    left: 50%;
    transform: translate(-50%, 0);
  } @else if ($vertical) {
    top: 50%;
    transform: translate(0, -50%);
  }
}

@mixin columns($count: 2, $gap: 0) {
  column-count: $count;
  column-gap: $gap;
  > * {
    break-inside: avoid;
    page-break-inside: avoid;
    -webkit-column-break-inside: avoid;
  }
}

@mixin for-size($size, $type: 'max') {
  @media (#{$type}-width: #{$size}) {
    @content;
  }
}

//Using @include declare-font('FontName', 'font-filename', 400, font-style);
@mixin declare-font($font-family, $font-filename, $font-weight: normal, $font-style: normal) {
  @font-face {
    font-family: '#{$font-family}';
    font-weight: $font-weight;
    font-style: $font-style;
    src: url('../fonts/#{$font-filename}.woff') format('woff'), url('../fonts/#{$font-filename}.woff2') format('woff2');
    font-display: swap;
  }
}

@function strip-units($value) {
  @return ($value / ($value * 0 + 1));
}
@mixin boxGrid($columnNumber, $spacingPercent) {
  $contentPercent: 100%;
  $sideMargin: ($spacingPercent/2);
  $marginInt: strip-units($sideMargin);
  justify-content: flex-start;
  flex-wrap: wrap;
  display: flex;
  margin: #{0} -#{$sideMargin};
  width: $contentPercent + $spacingPercent;
  > * {
    width: ($contentPercent/$columnNumber) - $spacingPercent;
    margin: 0 #{$sideMargin} ($marginInt + ($marginInt / $columnNumber) * 1em)
  }
}
